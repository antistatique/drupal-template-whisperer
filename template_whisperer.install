<?php

/**
 * @file
 * Contains template_whisperer.install.
 */

use Drupal\Core\Url;

/**
 * Implements hook_install().
 */
function template_whisperer_install() {
  // Rebuild the route cache before accessing new route.
  \Drupal::service("router.builder")->rebuild();

  $url = Url::fromRoute('entity.template_whisperer_suggestion.collection');
  drupal_set_message(t('Template Whisperer is available under <a href="@administer-page">Administer > Structure > Template Whisperer</a>', ['@administer-page' => $url->toString()]));
}

/**
 * Implements hook_schema().
 */
function template_whisperer_schema() {
  $schema['template_whisperer_suggestion_usage'] = [
    'description' => 'Track where a suggestion is used.',
    'fields' => [
      'sid' => [
        'description' => 'Suggestion ID.',
        'type' => 'varchar_ascii',
        'length' => 128,
        'not null' => TRUE,
        'default' => 0,
      ],
      'module' => [
        'description' => 'The name of the module that is using the suggestion.',
        'type' => 'varchar_ascii',
        'length' => DRUPAL_EXTENSION_NAME_MAX_LENGTH,
        'not null' => TRUE,
        'default' => '',
      ],
      'type' => [
        'description' => 'The name of the object type in which the suggestion is used.',
        'type' => 'varchar_ascii',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ],
      'id' => [
        'description' => 'The primary key of the object using the suggestion.',
        'type' => 'varchar_ascii',
        'length' => 64,
        'not null' => TRUE,
        'default' => 0,
      ],
      'count' => [
        'description' => 'The number of times this suggestion is used by this object.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['sid', 'type', 'id', 'module'],
    'indexes' => [
      'type_id' => ['type', 'id'],
      'sid_count' => ['sid', 'count'],
      'sid_module' => ['sid', 'module'],
    ],
  ];
  return $schema;
}

/**
 * Migrate the permission `administer the template whisperer field` to roles.
 */
function template_whisperer_update_8001(&$sandbox) {
  /** @var \Drupal\user\RoleInterface $roleStorage */
  $roleStorage = \Drupal::service('entity_type.manager')
    ->getStorage('user_role');

  // Get all roles with `administer template whisperer` permissions.
  $roles_with_tw_administer = user_role_names(TRUE, 'administer template whisperer');
  // Get all roles with `administer template whisperer suggestion entities.
  $roles_with_tw_suggestion = user_role_names(TRUE, 'administer template whisperer suggestion entities');

  $rids = array_merge($roles_with_tw_administer, $roles_with_tw_suggestion);
  $rids = array_keys($rids);

  if ($rids) {
    $roles = $roleStorage->loadMultiple($rids);
    // Add the new permission `administer the template whisperer field` to all
    // roles that already have the 2 previous permissions
    // `administer template whisperer` or
    // `administer template whisperer suggestion entities`.
    foreach ($roles as $role) {
      $role->grantPermission('administer the template whisperer field');
      $role->save();
    }
  }
}

/**
 * Remove the Template Whisperer listing views to use the Entity one.
 */
function template_whisperer_update_8002(&$sandbox) {
  \Drupal::configFactory()->getEditable('views.view.template_whisperer')->delete();
}
