<?php

/**
 * @file
 * Contains template_whisperer.module.
 */

use Drupal\Core\Entity\ContentEntityInterface;

/**
 * Implements hook_theme_suggestions_alter().
 */
function template_whisperer_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  $twManager = \Drupal::service('plugin.manager.template_whisperer');

  $entity = template_whisperer_get_route_entity();

  if (!empty($entity) && $entity instanceof ContentEntityInterface) {
    $suggestionsEntity = $twManager->suggestionsFromEntity($entity);

    // Expose one suggestion by fields.
    foreach ($suggestionsEntity as $suggestion) {
      $suggestions[] = $entity->getEntityTypeId() . '__' . $entity->getType() . '__' . $suggestion;
    }

    // Expose a suggestion merging each fields suggestion on this entity.
    if (count($suggestionsEntity) > 1) {
      $suggestions[] = $entity->getEntityTypeId() . '__' . $entity->getType() . '__' . implode('__', $suggestionsEntity);
    }
  }
}

/**
 * Returns the entity of the current route.
 *
 * @return EntityInterface
 *   The entity or NULL if this is not an entity route.
 */
function template_whisperer_get_route_entity() {
  $route_match = \Drupal::routeMatch();
  $route_name = $route_match->getRouteName();

  // Look for a canonical entity view page, e.g. node/{nid}, user/{uid}, etc.
  $matches = [];
  preg_match('/entity\.(.*)\.canonical/', $route_name, $matches);
  if (!empty($matches[1])) {
    $entity_type = $matches[1];
    return $route_match->getParameter($entity_type);
  }
}

// Includes.
require_once 'inc/rm_cardinality.inc';
require_once 'inc/help.inc';
